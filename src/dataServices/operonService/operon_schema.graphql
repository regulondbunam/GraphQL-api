# This schema represent operonDatamart, principal Type is operonDatamart.
# Types that can exist in differents datamart cannot be found here, 
# and exists in "Common_properties" Schema in "Common" Folder
# About descriptions
# 
# Each Type and Properties must have their own description defined at the 
# top of it by triple double quotes like """this is a description""" replacing
# the underscore with the description text

"""
This is a operonDatamart Type
"""
type operonDatamart {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	operon: Operon
	"""
	_
	"""
	transcriptionUnits: [TranscriptionUnits]
	"""
	_
	"""
	organism: Organism
	"""
	_
	"""
	allCitations: [Citations]
	"""
	_
	"""
	schemaVersion: Float
}

"""
_
"""
type Operon {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	name: String
	"""
	_
	"""
	regulationPositions: RegulationPositions
	"""
	_
	"""
	strand: String
	"""
	_
	"""
	statistics: OperonStatistics
}

"""
_
"""
type OperonStatistics {
	"""
	_
	"""
	transcriptionUnits: Int
	"""
	_
	"""
	promoters: Int
	"""
	_
	"""
	genes: Int
}

"""
_
"""
type RegulationPositions {
	"""
	_
	"""
	leftEndPosition: Int
	"""
	_
	"""
	rightEndPosition: Int
}

"""
_
"""
type TranscriptionUnits {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	firstGene: FirstGene
	"""
	_
	"""
	genes: [Genes]
	"""
	_
	"""
	note: String
	"""
	_
	"""
	synonyms: [String]
	"""
	_
	"""
	promoter: Promoter
	"""
	_
	"""
	terminators: [Terminators]
	"""
	_
	"""
	regulatorBindingSites: [RegulatorBindingSites]
	"""
	_
	"""
	statistics: TranscriptionUnitStatistics
}
"""
_
"""
type TranscriptionUnitStatistics {
	genes: Int
	sites: Int
	transcriptionFactors: Int
}

"""
_
"""
type FirstGene {
	"""
	_
	"""
	distanceToPromoter: Float
	"""
	_
	"""
	gene_id: String
	"""
	_
	"""
	gene_name: String
}

"""
_
"""
type Genes {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	regulatorBindingSites: [RegulatorBindingSites]
}

"""
_
"""
type Promoter {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	bindsSigmaFactor: BindsSigmaFactor
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	name: String
	"""
	_
	"""
	note: String
	"""
	_
	"""
	boxes: [Boxes]
	"""
	_
	"""
	score: String
	"""
	_
	"""
	sequence: String
	"""
	_
	"""
	synonyms: [String]
	"""
	_
	"""
	regulatorBindingSites: [RegulatorBindingSites]
	"""
	_
	"""
	transcriptionStartSite: TranscriptionStartSite
}


"""
_
"""
type BindsSigmaFactor {
	"""
	_
	"""
	sigmaFactor_id: String
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	sigmaFactor_name: String
}

"""
_
"""
type Boxes {
	"""
	_
	"""
	leftEndPosition: Int
	"""
	_
	"""
	rightEndPosition: Int
	"""
	_
	"""
	sequence: String
	"""
	_
	"""
	type: String	
}

"""
_
"""
type RegulatorBindingSites {
	"""
	_
	"""
	regulator: Regulator
	"""
	_
	"""
	regulatoryInteractions: [RegulatoryInteractions]
	"""
	_
	"""
	function: String
}

"""
_
"""
type Regulator {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	function: String
}

"""
_
"""
type RegulatoryInteractions {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	centerPosition: Float
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	function: String
	"""
	_
	"""
	note: String
	"""
	_
	"""
	regulatorySite: RegulatorySite
	"""
	_
	"""
	mechanism: String
}

"""
_
"""
type RegulatorySite {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	absolutePosition: Float
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	leftEndPosition: Int
	"""
	_
	"""
	length: Int
	"""
	_
	"""
	note: String
	"""
	_
	"""
	rightEndPosition: String
	"""
	_
	"""
	sequence: String
}

"""
_
"""
type TranscriptionStartSite {
	"""
	_
	"""
	leftEndPosition: Int
	"""
	_
	"""
	rightEndPosition: Int
	"""
	_
	"""
	range: Int
	"""
	_
	"""
	type: String
}

"""
_
"""
type Terminators {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	class: String
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	sequence: String
	"""
	_
	"""
	transcriptionTerminationSite: TranscriptionTerminationSite
}

"""
_
"""
type TranscriptionTerminationSite {
	"""
	_
	"""
	leftEndPosition: Int
	"""
	_
	"""
	rightEndPosition: Int
	"""
	_
	"""
	type: String
}

"""
This type contains operon and pagination
data obtained by the query
"""
type OperonResult { 
  """
  contains server response
  """
  data: [operonDatamart]
  """
  contains pagination info
  """
  pagination: Pagination
}

type Query {
  """
  #### Type
  Data
  #### Service
  Operon
  #### Name
  getAllOperon
  #### Description
  List all the operon objects contained in collection
  #### Example
  ```json
  {
    getAllOperon(limit:5){
      data{
        operon{
          id
          name
          strand
        }
        transcriptionUnits{
          id
          name
        }
      }
    }
  }
  ```
  """
  getAllOperon(
    """
    #### Description
    defines the page results showed 
    #### Required
    Optional
    """
    limit: Int = 10, 
    """
    #### Description
    select the current result page 
    #### Required
    Optional
    """
    page: Int = 0): OperonResult! 
  
  
  """
  #### Type
  Data
  #### Service
  Operon
  #### Name
  getOperonBy
  #### Description
  List the Operon objects obtained by a search or advancedSearch String
  #### Example
  ```json
  {
    getOperonBy(search: "accD or accBC"){
      data{
        operon{
          id
          name
          strand
        }
        transcriptionUnits{
          id
          name
        }
      }
    }
  }
  ```
  """
  getOperonBy(
    """
    #### Description
    usable for text search on fields defined in \"Properties\" parameter; syntax; 
    supports logic operators (AND,OR,NOT). **eg**: \"arad AND arac OR \"biosynthesis of macromolecules\"\"
    #### Required
    Optional
    """
    search: String, 
    """
    #### Description
    usable for queries that require advanced control, uses a \"value[field]\" syntax; 
    supports logic operators (AND,OR,NOT). **eg**: \"(arac|arad[operon.name] AND arab[transcriptionUnit.name])\"
    #### Required
    Optional
    """
    advancedSearch: String, 
    """
    #### Description
    defines the page results showed
    #### Required
    Optional
    """
    limit: Int = 10, 
    """
    #### Description
    select the current result page
    #### Required
    Optional
    """
    page: Int = 0, 
    """
    #### Description
    select the fields to be queried by \"search\"
    #### Required
    Optional
    """
    properties: [String] = ["operon.id", "operon.name"],
    """
    #### Description
    define if \"search\" will be Case Sensitive and cannot be a substring
    #### Required
    Optional
    """
    fullMatchOnly: Boolean = false): OperonResult! 
}
 