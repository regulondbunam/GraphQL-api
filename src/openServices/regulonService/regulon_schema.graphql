# This schema represent regulonDatamart, principal Type is RegulonDatamart.
# Types that can exist in differents datamart cannot be found here, 
# and exists in "Common_properties" Schema in "Common" Folder
# About descriptions
# 
# Each Type and Properties must have their own description defined at the 
# top of it by triple double quotes like """this is a description""" replacing
# the underscore with the description text

"""
_
"""
type RegulonDatamart {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	transcriptionFactor: TranscriptionFactor
	"""
	_
	"""
	terms: Terms
	"""
	_
	"""
	regulates: Regulates
	"""
	_
	"""
	regulatoryInteractions: [RegulonRegulatoryInteractions]
	"""
	_
	"""
	aligmentMatrix: AligmentMatrix
	"""
	_
	"""
	evolutionaryConservation: EvolutionaryConservation
	"""
	_
	"""
	organism: String
	"""
	_
	"""
	summary: Summary
}

"""
_
"""
type TranscriptionFactor {
	"""
	_
	"""
	name: String
	"""
	_
	"""
	synonyms: [String]
	"""
	_
	"""
	note: String
	"""
	_
	"""
	conformations: [Conformations]
	"""
	_
	"""
	encodedFrom: EncodedFrom
	"""
	_
	"""
	sensingClass: String
	"""
	_
	"""
	connectivityClass: String
}

"""
_
"""
type EncodedFrom {
	"""
	_
	"""
	genes: [EncodedGenes]
	"""
	_
	"""
	operon: [EncodedOperon]
}

"""
_
"""
type Conformations {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	type: String
	"""
	_
	"""
	effectorInteractionType: String
	"""
	_
	"""
	citations: [Citations]
	"""
	_
	"""
	functionalType: String
}

"""
_
"""
type EncodedGenes {
	"""
	_
	"""
	gene_id: String
	"""
	_
	"""
	gene_name: String
	"""
	_
	"""
	genomePosition: String
	"""
	_
	"""
	length: String
}

"""
_
"""
type EncodedOperon {
	"""
	_
	"""
	operon_id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	tusEncodingRegulator: [TusEncodingRegulator]
}

"""
_
"""
type TusEncodingRegulator {
	"""
	_
	"""
	transcriptionUnitName: String
	"""
	_
	"""
	promoterName: String
}

"""
_
"""
type Terms {
	"""
	_
	"""
	multifun: [RegulonMultifun]
	"""
	_
	"""
	geneOntology: RegulonGeneOntology
}

"""
_
"""
type RegulonGeneOntology {
	"""
	_
	"""
	cellularComponent: [RegulonGeneOntologyItem]
	"""
	_
	"""
	molecularFunction: [RegulonGeneOntologyItem]
	"""
	_
	"""
	biologicalProcess: [RegulonGeneOntologyItem]
}

"""
_
"""
type RegulonGeneOntologyItem {
	"""
	_
	"""
	term_id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	gene_ids: [String]
}

"""
_
"""
type RegulonMultifun {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	gene_ids: [String]
}

"""
_
"""
type Regulates {
	"""
	_
	"""
	genes: [RegulatedGenes]
	"""
	_
	"""
	transcriptionFactors: [RegulatedTranscriptionFactors]
	"""
	_
	"""
	transcriptionUnits: [RegulatedTranscriptionUnits]
	"""
	_
	"""
	operons: [RegulatedOperons]
	"""
	_
	"""
	sigmaFactors: [RegulatedSigmaFactors]
}

"""
_
"""
type RegulatedGenes {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	function: String
	"""
	_
	"""
	terms: Terms
}

"""
_
"""
type RegulatedTranscriptionFactors {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	function: String
}

"""
_
"""
type RegulatedTranscriptionUnits {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	function: String
	"""
	_
	"""
	firstGene: RegulatedFirstGene
}

"""
_
"""
type RegulatedOperons {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	function: String
	"""
	_
	"""
	firstGene: RegulatedFirstGene
}

"""
_
"""
type RegulatedSigmaFactors {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
	"""
	_
	"""
	function: String
	"""
	_
	"""
	firstGene: RegulatedFirstGene
}

"""
_
"""
type RegulatedFirstGene {
	"""
	_
	"""
	id: String
	"""
	_
	"""
	name: String
}

"""
_
"""
type RegulonRegulatoryInteractions {
	"""
	_
	"""
	regulator: RegulonRegulator
	"""
	_
	"""
	function: String
	"""
	_
	"""
	regulatedEntity: RegulatedEntity
	"""
	_
	"""
	distanceToFirstGene: Int
	"""
	_
	"""
	distanceToPromoter: Int
	"""
	_
	"""
	regulatedGenes: [RegulatedGenesByRegulator]
	"""
	_
	"""
	regulatoryBindingSites: RegulatoryBindingSites
	"""
	_
	"""
	citations: [Citations]
}

"""
_
"""
type RegulonRegulator {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	type: String
	"""
	_
	"""
	name: String
}

"""
_
"""
type RegulatedEntity {
	"""
	_
	"""
	_id: String
	"""
	_
	"""
	type: String
	"""
	_
	"""
	name: String
}

"""
_
"""
type RegulatedGenesByRegulator {
	"""
	_
	"""
	id: String, 
	"""
	_
	"""
	name: String
}

"""
_
"""
type RegulatoryBindingSites {
	"""
	_
	"""
	absolutePosition: Int
	"""
	_
	"""
	leftEndPosition: Int
	"""
	_
	"""
	rightEndPosition: Int
	"""
	_
	"""
	sequence: String
	"""
	_
	"""
	strand: String
	"""
	_
	"""
	citations: [Citations]
}

"""
_
"""
type AligmentMatrix {
	"""
	_
	"""
	aligment: String
	"""
	_
	"""
	matrix: String
	"""
	_
	"""
	consensus: String
	"""
	_
	"""
	urlPWMLogo: String
	"""
	_
	"""
	urlMatrixQualityResult: String
}

"""
_
"""
type EvolutionaryConservation {
	"""
	_
	"""
	urlRegulatorTargetGene: String
	"""
	_
	"""
	urlPromoterTargetGene: String
}

"""
_
"""
type Summary {
	"""
	_
	"""
	genes: SummaryObject
	"""
	_
	"""
	transcriptionFactors: SummaryObject
	"""
	_
	"""
	transcriptionUnits: SummaryObject
	"""
	_
	"""
	operons: SummaryObject
	"""
	_
	"""
	sigmaFactors: SummaryObject
	"""
	_
	"""
	bindingSites: SummaryObject
	"""
	_
	"""
	regulatoryInteractions: SummaryObject
}

"""
_
"""
type SummaryObject {
	"""
	_
	"""
	repressed: Int
	"""
	_
	"""
	activated: Int
	"""
	_
	"""
	dual: Int
	"""
	_
	"""
	unknown: Int
	"""
	_
	"""
	total: Int
}

"""
_
"""
type RegulonResult { 
  """
  contains server response
  """
  data: [RegulonDatamart]
  """
  contains pagination info
  """
  pagination: Pagination
}

"""
_
"""
type Query {
  """
  #### Type
  Data
  #### Service
  Regulon
  #### Name
  getAllRegulon
  #### Description
  List all the regulon contained in collection
  #### Example
  ```json
  {
	getAllRegulon(limit: 5){
		data{
		_id
		transcriptionFactor{
			name
			encodedFrom{
			genes{
				gene_name
			}
			operon{
				name
			}
			}
		}
		}
	}
  }
  ```
  """
  getAllRegulon(
    """
    #### Description
    defines the page results showed 
    #### Required
    Optional
    """
	limit: Int = 10, 
    """
    #### Description
    select the current result page 
    #### Required
    Optional
    """
	page: Int = 0): RegulonResult!
  """
  #### Type
  Data
  #### Service
  Regulon
  #### Name
  getRegulonBy
  #### Description
  List the regulon docs obtained by a search or advancedSearch String
  #### Example
  ```json
  {
	getRegulonBy(search: "agaR or araC"){
		data{
		_id
		transcriptionFactor{
			name
			encodedFrom{
			genes{
				gene_name
			}
			operon{
				name
			}
			}
		}
		}
	}
  }
  ```
  """
  getRegulonBy(
    """
    #### Description
    usable for text search on fields defined in \"Properties\" parameter; syntax; 
    supports logic operators (AND,OR,NOT). **eg**: \"arad AND arac OR \"biosynthesis of macromolecules\"\"
    #### Required
    You must use search or advancedSearch
    """
    search: String, 
    """
    #### Description
    usable for queries that require advanced control, uses a \"value[field]\" syntax; 
    supports logic operators (AND,OR,NOT). **eg**: \"arac|arad[transcriptionFactor.name]\"
    #### Required
    You must use search or advancedSearch
    """
    advancedSearch: String, 
    """
    #### Description
    defines the page results showed
    #### Required
    Optional
    """
    limit: Int = 10, 
    """
    #### Description
    select the current result page
    #### Required
    Optional
    """
    page: Int = 0, 
    """
    #### Description
    select the fields to be queried by \"search\"
    #### Required
    Optional
    """
    properties: [String] = ["transcriptionFactor.id", "transcriptionFactor.name"], 
    """
    #### Description
    usable for specific organismName queries (not available right now)
    #### Required
    Optional
    """
    organismName: String, 
    """
    #### Description
    define if \"search\" will be Case Sensitive and cannot be a substring
    #### Required
    Optional
    """
    fullMatchOnly: Boolean = false): RegulonResult!
} 